/**
 * Constants used throughout the application.
 * Contains default relay URLs for Nostr connectivity.
 */

/**
 * List of default Nostr relay websocket endpoints for general communication.
 */
export const DEFAULT_RELAYS = [
  "wss://relay.damus.io", 
  "wss://nos.lol"
];

/**
 * List of default Nostr relay websocket endpoints for user lookups.
 */
export const DEFAULT_LOOKUP_RELAYS = [
  "wss://purplepag.es/",
  "wss://user.kindpag.es/",
];

/**
 * Known Nostr event kinds
 */
export const EVENT_KINDS =[
  { kind: 0, kurl: "https://nostrbook.dev/kinds/0", "name": "User Metadata", short_description: "Profile information and user settings", nurl: "https://github.com/nostr-protocol/nips/blob/master/01.md", nip: "NIP-01", description: `Kind 0 events represent user metadata in the Nostr protocol. These events contain profile information for Nostr users, allowing them to share details about themselves with the network.`},
  { kind: 1, kurl: "https://nostrbook.dev/kinds/1", "name": "Short Text Note", short_description: "The basic text note/post", nurl: "https://github.com/nostr-protocol/nips/blob/master/10.md", nip: "NIP-10", description: `Kind 1 is a basic text note in the Nostr protocol, serving as the foundation for social media-style text posts. It enables users to publish plain text content, reply to other posts, create threaded conversations, and mention or quote other events. This kind is fundamental to social communication on the Nostr network.`},
  { kind: 3, kurl: "https://nostrbook.dev/kinds/3", "name": "Follow List", short_description: "List of followed profiles", nurl: "https://github.com/nostr-protocol/nips/blob/master/02.md", nip: "NIP-02", description: `Kind 3 events represent a user's follow list in the Nostr protocol. They provide a way for users to specify which profiles they are following, along with optional information about where those profiles can be found (relay URLs) and personal nicknames for those profiles (petnames).`},
  { kind: 4, kurl: "https://nostrbook.dev/kinds/4", "name": "Encrypted Direct Message", short_description: "Private messages (deprecated)", nurl: "https://github.com/nostr-protocol/nips/blob/master/04.md", nip: "NIP-04", description: `Encrypted Direct Message (kind 4) events are used for private communications between users. They contain encrypted content that can only be decrypted by the intended recipient. This kind has been deprecated in favor of Kind 14 (NIP-17), which offers improved security.`},
  { kind: 5, kurl: "https://nostrbook.dev/kinds/5", "name": "Event Deletion Request", short_description: "Request to delete previously published events", nurl: "https://github.com/nostr-protocol/nips/blob/master/09.md", nip: "NIP-09", description: `Event Deletion Request (kind 5) is a special event type used to request the deletion of one or more previously published events. It allows users to indicate they wish to retract or disown specific content they have published.`},
  { kind: 6, kurl: "https://nostrbook.dev/kinds/6", "name": "Repost", short_description: "Sharing a text note with followers", nurl: "https://github.com/nostr-protocol/nips/blob/master/18.md", nip: "NIP-18", description: `Repost events (kind 6) allow users to share existing content with their followers, similar to "retweets" in other platforms. This event type is specifically for reposting kind 1 text notes and signals to followers that a particular note is worth reading.`},
  { kind: 7, kurl: "https://nostrbook.dev/kinds/7", "name": "Reaction", short_description: "Like, dislike, or emoji reaction to an event", nurl: "https://github.com/nostr-protocol/nips/blob/master/25.md", nip: "NIP-25", description: `Reaction events (kind 7) allow users to express simple responses to other events, similar to "likes," "dislikes," or emoji reactions on other platforms. They provide a lightweight way to engage with content without creating a full reply.`},
  { kind: 8, kurl: "https://nostrbook.dev/kinds/8", "name": "Badge Award", short_description: "Award badges to users", nurl: "https://github.com/nostr-protocol/nips/blob/master/58.md", nip: "NIP-58", description: `Badge Award events (kind 8) are used to award badges or achievements to users in the Nostr ecosystem. These events represent the act of an issuer granting recognition to one or more recipients, linking badge definitions to specific users.`},
  { kind: 9, kurl: "https://nostrbook.dev/kinds/9", "name": "Chat Message", short_description: "Simple chat messaging", nurl: "https://github.com/nostr-protocol/nips/blob/master/C7.md", nip: "NIP-C7", description: `Chat Message events (kind 9) are used for general chat messaging in the Nostr ecosystem. Unlike the more structured public chat system defined in NIP-28 (kinds 40-44), kind 9 events are intended for simple, direct chat functionality.`},
  { kind: 10, kurl: "https://nostrbook.dev/kinds/10", "name": "Group Chat Threaded Reply", short_description: "Threaded replies in group chats (deprecated)", nurl: "https://github.com/nostr-protocol/nips/blob/master/29.md", nip: "NIP-29", description: `Kind 10 events represent threaded replies in group chat contexts. This kind is part of the relay-based groups system defined in NIP-29. It allows for organized conversation threads within group chats, similar to how threading works in forum or chat applications. Note: As mentioned in NIP-29, this kind is deprecated in favor of the more comprehensive relay-based groups system.`},
  { kind: 11, kurl: "https://nostrbook.dev/kinds/11", "name": "Thread", short_description: "Discussion thread root", nurl: "https://github.com/nostr-protocol/nips/blob/master/7D.md", nip: "NIP-7D", description: `Thread events (kind 11) are used to create discussion threads, which serve as the root of a conversation that others can reply to using comments. This event type helps organize conversations around specific topics, similar to forum threads or discussion boards.`},
  { kind: 12, kurl: "https://nostrbook.dev/kinds/12", "name": "Group Thread Reply", short_description: "Replies to threads in group chats (deprecated)", nurl: "https://github.com/nostr-protocol/nips/blob/master/29.md", nip: "NIP-29", description: `Kind 12 events are replies to threaded discussions within relay-based groups. It extends the group chat functionality by supporting nested conversation threads similar to forum discussions. This kind is part of the broader relay-based groups ecosystem defined in NIP-29, although it has been marked as deprecated in favor of newer approaches to group interactions.`},
  { kind: 13, kurl: "https://nostrbook.dev/kinds/13", "name": "Seal", short_description: "Encrypted wrapper for an unsigned event", nurl: "https://github.com/nostr-protocol/nips/blob/master/59.md", nip: "NIP-59", description: `Seal events (kind 13) are part of the Gift Wrap protocol (NIP-59) used to encapsulate and encrypt Nostr events. A Seal wraps an unsigned event (called a "rumor") and is signed by the true author of the content, but with the content encrypted to hide it from third parties.`},
  { kind: 14, kurl: "https://nostrbook.dev/kinds/14", "name": "Direct Message", short_description: "Private messaging with enhanced security", nurl: "https://github.com/nostr-protocol/nips/blob/master/17.md", nip: "NIP-17", description: `Direct Message events (kind 14) are used for private messaging between users. They use a sophisticated multi-layer encryption approach to protect the privacy and security of conversations. They replace the deprecated kind 4 encrypted direct messages, offering significantly improved privacy.`},
  { kind: 15, kurl: "https://nostrbook.dev/kinds/15", "name": "File Message", short_description: "Encrypted file sharing", nurl: "https://github.com/nostr-protocol/nips/blob/master/17.md", nip: "NIP-17", description: `File Message events (kind 15) are used for sharing encrypted files in direct messages. They extend the private messaging system defined in NIP-17, providing a structured way to transmit file metadata and references while maintaining privacy and security.`},
  { kind: 16, kurl: "https://nostrbook.dev/kinds/16", "name": "Generic Repost", short_description: "Reposting non-text-note content", nurl: "https://github.com/nostr-protocol/nips/blob/master/18.md", nip: "NIP-18", description: `Generic Repost events (kind 16) allow users to share any kind of event with their followers, not just text notes. While kind 6 is specifically for reposting kind 1 text notes, kind 16 extends this functionality to other event types like long-form content, encrypted messages, channel posts, and more.`},
  { kind: 17, kurl: "https://nostrbook.dev/kinds/17", "name": "Reaction to a Website", short_description: "Like, emoji, or other reaction to web content", nurl: "https://github.com/nostr-protocol/nips/blob/master/25.md", nip: "NIP-25", description: `Reaction to a Website events (kind 17) allow users to express reactions to external web content. Similar to kind 7 reactions for Nostr events, these events enable users to react with likes, emojis, or other expressions to specific websites or web pages.`},
  { kind: 20, kurl: "https://nostrbook.dev/kinds/20", "name": "Picture", short_description: "Image-centric posts", nurl: "https://github.com/nostr-protocol/nips/blob/master/68.md", nip: "NIP-68", description: `Picture events (kind 20) are designed for image-centric content in Nostr. These events cater to clients resembling platforms like Instagram or Flickr, where images take center stage in the user experience. Picture events can contain single or multiple images, descriptive text, and rich metadata.`},
  { kind: 21, kurl: "https://nostrbook.dev/kinds/21", "name": "Video Event", short_description: "Video-centric content", nurl: "https://github.com/nostr-protocol/nips/blob/master/71.md", nip: "NIP-71", description: `Video Events (kind 21) are designed for sharing externally hosted video content with rich metadata. Unlike a regular text note with a video link, these events are specifically created for video-centric clients that place the video at the center of the user experience, similar to platforms like YouTube or Netflix.`},
  { kind: 22, kurl: "https://nostrbook.dev/kinds/22", "name": "Short-form Portrait Video", short_description: "Vertical short-form video content", nurl: "https://github.com/nostr-protocol/nips/blob/master/71.md", nip: "NIP-71", description: `Short-form Portrait Video events (kind 22) are designed for sharing vertical, short-format video content similar to TikTok, Instagram Reels, or YouTube Shorts. While kind 21 video events focus on traditional landscape orientation videos, kind 22 specifically caters to the vertical, mobile-first, brief video format that has become popular on social media.`},
  { kind: 40, kurl: "https://nostrbook.dev/kinds/40", "name": "Channel Creation", short_description: "Create a public chat channel", nurl: "https://github.com/nostr-protocol/nips/blob/master/28.md", nip: "NIP-28", description: `Channel Creation events (kind 40) are used to create public chat channels in Nostr. These events establish the foundation for group conversations, defining the channel's initial parameters and serving as the reference point for all subsequent channel-related events.`},
  { kind: 41, kurl: "https://nostrbook.dev/kinds/41", "name": "Channel Metadata", short_description: "Update chat channel information", nurl: "https://github.com/nostr-protocol/nips/blob/master/28.md", nip: "NIP-28", description: `Channel Metadata events (kind 41) are used to update information about an existing public chat channel in Nostr. Unlike creating a new channel (kind 40), these events modify properties of a channel without changing its identity, allowing channel owners to update details like name, description, picture, and recommended relay list.`},
  { kind: 42, kurl: "https://nostrbook.dev/kinds/42", "name": "Channel Message", short_description: "Message posted to a channel", nurl: "https://github.com/nostr-protocol/nips/blob/master/28.md", nip: "NIP-28", description: `Channel Message events (kind 42) are used to send text messages to public chat channels in Nostr. These events form the core content of the channel system, allowing users to communicate in shared spaces and engage in threaded conversations through replies.`},
  { kind: 43, kurl: "https://nostrbook.dev/kinds/43", "name": "Channel Hide Message", short_description: "Hide a specific channel message", nurl: "https://github.com/nostr-protocol/nips/blob/master/28.md", nip: "NIP-28", description: `Kind 43 events are used in the public chat system (NIP-28) to hide specific messages in a channel. This event type allows users to indicate they no longer want to see a particular message, providing client-side moderation capabilities without imposing requirements on relays. When a user creates a kind 43 event, clients should hide the referenced message when displaying the channel to that user.`},
  { kind: 44, kurl: "https://nostrbook.dev/kinds/44", "name": "Channel Mute User", short_description: "Mute a user in a channel", nurl: "https://github.com/nostr-protocol/nips/blob/master/28.md", nip: "NIP-28", description: `Kind 44 events are part of the public chat system (NIP-28) and provide a client-side moderation mechanism for muting specific users in a channel. When a user creates a kind 44 event targeting another user's public key, clients should hide all messages from that user when displaying channel content to the muting user. This allows individuals to customize their chat experience without requiring relay-side moderation.`},
  { kind: 62, kurl: "https://nostrbook.dev/kinds/62", "name": "Request to Vanish", short_description: "Request for complete data removal", nurl: "https://github.com/nostr-protocol/nips/blob/master/62.md", nip: "NIP-62", description: `Kind 62 events provide a Nostr-native mechanism for users to request the complete deletion of their digital footprint from specific relays or from the entire Nostr network. This is designed as a legally binding event in some jurisdictions, offering a "right to be forgotten" functionality. Relays that support this NIP are expected to permanently delete all events associated with the requesting public key.`},
  { kind: 64, kurl: "https://nostrbook.dev/kinds/64", "name": "Chess (PGN)", short_description: "Chess games in PGN format", nurl: "https://github.com/nostr-protocol/nips/blob/master/64.md", nip: "NIP-64", description: `Kind 64 events represent chess games in Portable Game Notation (PGN) format. PGN is a standard format for recording chess games that can be read by humans and is supported by most chess software. This kind allows Nostr to be used for recording, sharing, and replaying chess games between users.`},
  { kind: 1018, kurl: "https://nostrbook.dev/kinds/1018", "name": "Poll Response", short_description: "Vote on a poll", nurl: "https://github.com/nostr-protocol/nips/blob/master/88.md", nip: "NIP-88", description: `Kind 1018 events represent responses to polls in the Nostr ecosystem. These events allow users to vote on polls created as Kind 1068 events. The poll response system supports both single-choice and multiple-choice polls, with configurable mechanisms to ensure vote integrity including time limits and one-vote-per-pubkey rules.`},
  { kind: 1059, kurl: "https://nostrbook.dev/kinds/1059", "name": "Gift Wrap", short_description: "Encrypted outer wrapper for secure messaging", nurl: "https://github.com/nostr-protocol/nips/blob/master/59.md", nip: "NIP-59", description: `Gift Wrap (kind 1059) events are part of Nostr's privacy-enhancing protocol for secure messaging. They serve as an outer envelope to conceal both the content and metadata of the wrapped message. Gift Wrap events contain an encrypted Seal (kind 13) event, which in turn contains an encrypted unsigned event (rumor), creating a three-layer privacy system.`},
  { kind: 1063, kurl: "https://nostrbook.dev/kinds/1063", "name": "File Metadata", short_description: "Metadata for shared files", nurl: "https://github.com/nostr-protocol/nips/blob/master/94.md", nip: "NIP-94", description: `Kind 1063 events provide metadata for files shared in the Nostr ecosystem. This kind enables the organization, classification, and discovery of shared files, allowing relays to filter and organize content in various ways. It supports multiple types of file-sharing applications and can be used for images, videos, documents, software, and other file types. Kind 1063 is particularly useful for specialized file-sharing clients rather than general social clients.`},
  { kind: 1068, kurl: "https://nostrbook.dev/kinds/1068", "name": "Poll", short_description: "Create a poll with voting options", nurl: "https://github.com/nostr-protocol/nips/blob/master/88.md", nip: "NIP-88", description: `Kind 1068 events define polls in the Nostr ecosystem. Polls allow users to create questions with multiple options for other users to vote on. The polls system supports both single-choice and multiple-choice voting, with configurable end times and relay specifications for where responses should be published.`},
  { kind: 1111, kurl: "https://nostrbook.dev/kinds/1111", "name": "Comment", short_description: "Structured comments on content", nurl: "https://github.com/nostr-protocol/nips/blob/master/22.md", nip: "NIP-22", description: `Kind 1111 events represent comments in the Nostr ecosystem. Unlike regular replies to text notes (which use kind 1 with e-tags), the Comment kind provides a structured approach for commenting on various types of content, including long-form articles, files, websites, podcasts, and other non-text-note content. Comments support a robust threading model that maintains clear relationships between root content, parent comments, and nested replies.`},
  { kind: 1337, kurl: "https://nostrbook.dev/kinds/1337", "name": "Code Snippet", short_description: "Programming code with metadata", nurl: "https://github.com/nostr-protocol/nips/blob/master/C0.md", nip: "NIP-C0", description: `Kind 1337 events represent code snippets in the Nostr ecosystem. Unlike regular text notes, code snippets include specialized metadata such as programming language, file extension, and other code-specific attributes that enhance discoverability and improve the user experience when sharing code. This kind allows for proper syntax highlighting, code formatting, and related functionality that developers expect when working with code.`},
  { kind: 1984, kurl: "https://nostrbook.dev/kinds/1984", "name": "Reporting", short_description: "Report objectionable content", nurl: "https://github.com/nostr-protocol/nips/blob/master/56.md", nip: "NIP-56", description: `Kind 1984 events enable users to report objectionable content in the Nostr ecosystem. These reports signal to other users, clients, and relays that specific content may be problematic. The definition of "objectionable" is subjective, and all parties on the network (users, applications, relays) can consume and act on reports as they see fit. This kind provides a standardized mechanism for community moderation without imposing centralized content policies.`},
  { kind: 1985, kurl: "https://nostrbook.dev/kinds/1985", "name": "Label", short_description: "Apply labels to events and entities", nurl: "https://github.com/nostr-protocol/nips/blob/master/32.md", nip: "NIP-32", description: `Kind 1985 events provide a mechanism for attaching labels to various entities in the Nostr ecosystem. Labels allow for distributed moderation, content classification, license assignment, collection management, and other forms of metadata annotation. This kind enables users to create semantic connections and categorizations across the network without requiring centralized authority or coordination.`},
  { kind: 2003, kurl: "https://nostrbook.dev/kinds/2003", "name": "Torrent", short_description: "BitTorrent content index", nurl: "https://github.com/nostr-protocol/nips/blob/master/35.md", nip: "NIP-35", description: `Kind 2003 events represent torrents in the Nostr ecosystem. These events serve as a simple torrent index, providing enough information to search for content and construct magnet links without storing actual torrent files on Nostr. This allows for decentralized content indexing and discovery while maintaining the efficient peer-to-peer distribution mechanism of the BitTorrent protocol.`},
  { kind: 2004, kurl: "https://nostrbook.dev/kinds/2004", "name": "Torrent Comment", short_description: "Comments on torrents", nurl: "https://github.com/nostr-protocol/nips/blob/master/35.md", nip: "NIP-35", description: `Kind 2004 events represent comments on torrents in the Nostr ecosystem. These events allow users to provide feedback, information, or discussions about specific torrents that have been shared as Kind 2003 events. Torrent comments function similarly to regular short text notes (Kind 1) but are specifically linked to torrent events, enabling threaded discussions about shared content.`},
  { kind: 4550, kurl: "https://nostrbook.dev/kinds/4550", "name": "Community Post Approval", short_description: "Approval of posts by moderators", nurl: "https://github.com/nostr-protocol/nips/blob/master/72.md", nip: "NIP-72", description: `Community Post Approval events (kind 4550) are used by moderators to approve posts for inclusion in moderated communities. These events represent the moderation layer of the NIP-72 community system, allowing designated moderators to curate what content appears within a community. Any post in a Nostr community requires approval through a kind 4550 event before it can be considered part of that community.`},
  { kind: 7374, kurl: "https://nostrbook.dev/kinds/7374", "name": "Cashu Quote", short_description: "Tracks mint payment quotes", nurl: "https://github.com/nostr-protocol/nips/blob/master/60.md", nip: "NIP-60", description: `A Cashu Quote event (Kind 7374) is used to store the state of a mint quote ID, which is used to check when a payment has been completed. This is an optional event that helps applications track the status of Lightning Network quotes for Cashu mints. These events are typically temporary and include an expiration tag.`},
  { kind: 7375, kurl: "https://nostrbook.dev/kinds/7375", "name": "Cashu Token", short_description: "Stores unspent Cashu proofs", nurl: "https://github.com/nostr-protocol/nips/blob/master/60.md", nip: "NIP-60", description: `A Cashu Token event (Kind 7375) stores encrypted ecash proofs that represent unspent funds in a Cashu wallet. These events track the state of a user's ecash tokens across different Nostr clients, allowing for interoperable wallet functionality. When tokens are spent, these events are deleted using NIP-09 and new events may be created with the remaining unspent proofs.`},
  { kind: 7376, kurl: "https://nostrbook.dev/kinds/7376", "name": "Nutzap Redemption", short_description: "Records redemption of Nutzap tokens", nurl: "https://github.com/nostr-protocol/nips/blob/master/61.md", nip: "NIP-61", description: `A Nutzap Redemption event (Kind 7376) is created when a user successfully redeems or claims Cashu tokens received from a Nutzap. This event serves as a record that tokens have been claimed, preventing double-redemption attempts, and signals to the sender that their payment has been received and processed.`},
  { kind: 9041, kurl: "https://nostrbook.dev/kinds/9041", "name": "Zap Goal", short_description: "Fundraising target for lightning payments", nurl: "https://github.com/nostr-protocol/nips/blob/master/75.md", nip: "NIP-75", description: `Zap Goal events (kind 9041) define fundraising or donation targets using the Lightning Network zap system. These events allow creators, projects, or causes to set specific funding goals, track progress, and provide milestone information for funding campaigns in the Nostr ecosystem.`},
  { kind: 9734, kurl: "https://nostrbook.dev/kinds/9734", "name": "Zap Request", short_description: "Request for a lightning payment invoice", nurl: "https://github.com/nostr-protocol/nips/blob/master/57.md", nip: "NIP-57", description: `A Nutzap event (Kind 9321) is used to send P2PK Cashu tokens to Nostr users. It contains Cashu token proofs that are P2PK-locked to the recipient's specified public key. Nutzaps function as a Nostr-native payment mechanism where the payment itself serves as the receipt.`},
  { kind: 9321, kurl: "https://nostrbook.dev/kinds/9321", "name": "Nutzap", short_description: "P2PK Cashu token payment", nurl: "https://github.com/nostr-protocol/nips/blob/master/61.md", nip: "NIP-61", description: `Zap Request events (kind 9734) are special events that are not published to relays but are instead sent to a recipient's LNURL pay service to request a Lightning Network invoice. They represent a user's intention to send a Bitcoin payment (zap) to another user or to a specific Nostr event. When a zap request is processed and the resulting invoice is paid, the service generates a Zap Receipt (kind 9735) that gets published to relays.`},
  { kind: 9735, kurl: "https://nostrbook.dev/kinds/9735", "name": "Zap Receipt", short_description: "Confirmation of a lightning payment", nurl: "https://github.com/nostr-protocol/nips/blob/master/57.md", nip: "NIP-57", description: `Zap events (kind 9735) represent lightning network payments between Nostr users. They are created by lightning nodes or services when a zap invoice generated from a zap request has been paid. Zaps allow users to send Bitcoin tips to each other and have them recorded in the Nostr ecosystem, creating a visible history of payments that can be displayed by clients.`},
  { kind: 9802, kurl: "https://nostrbook.dev/kinds/9802", "name": "Highlights", short_description: "Highlighted content excerpts", nurl: "https://github.com/nostr-protocol/nips/blob/master/84.md", nip: "NIP-84", description: `Kind 9802 events allow users to highlight specific content they find valuable. This could be a quote from a text note, article, or external website, or a reference to a non-text media item like an audio clip or video segment. Highlights serve as a way to save, curate, and share interesting portions of content across the Nostr ecosystem and beyond.`},
  { kind: 10000, kurl: "https://nostrbook.dev/kinds/10000", "name": "Mute List", short_description: "Content and users to hide from feeds", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Mute List events (kind 10000) allow users to define and share the content they don't want to see in their feeds. This standard replaceable event kind acts as a filter, specifying public keys of users, hashtags, specific words, or entire threads that should be hidden from the user's view. Mute lists can include both public items (visible in the event tags) and private items (encrypted in the content field).`},
  { kind: 10001, kurl: "https://nostrbook.dev/kinds/10001", "name": "Pinned Notes", short_description: "Notes to showcase on a profile", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Pinned Notes events (kind 10001) allow users to showcase specific notes on their profile pages. This standard replaceable event kind serves as a list of note references that a user wants to highlight for visitors to their profile, similar to pinned posts on other social platforms. Pinning notes helps users feature their most important, representative, or popular content.`},
  { kind: 10002, kurl: "https://nostrbook.dev/kinds/10002", "name": "Relay List Metadata", short_description: "User's preferred relays for discovery", nurl: "https://github.com/nostr-protocol/nips/blob/master/65.md", nip: "NIP-65", description: `Relay List Metadata events (kind 10002) allow users to advertise their preferred relays for content discovery and distribution. This replaceable event kind serves as a standardized way to tell others where to find a user's content and where they expect to receive communications. By publishing this list, users help optimize the Nostr network by directing clients to connect only to relevant relays rather than broadcasting to all possible relays.`},
  { kind: 10003, kurl: "https://nostrbook.dev/kinds/10003", "name": "Bookmarks", short_description: "Saved content for later reference", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Bookmarks events (kind 10003) allow users to save and organize content they want to reference later. This standard replaceable event kind serves as a global, uncategorized list of items a user wants to preserve, similar to bookmarks in a web browser. Bookmarks can contain references to notes, articles, hashtags, and external URLs.`},
  { kind: 10004, kurl: "https://nostrbook.dev/kinds/10004", "name": "Communities", short_description: "Communities the user belongs to", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Communities events (kind 10004) allow users to maintain a list of Nostr communities they belong to or follow. This standard replaceable event kind serves as a user's record of community membership, making it easier to discover and organize participation in NIP-72 communities. By publishing this list, users can share which communities they're active in and help others discover interesting communities.`},
  { kind: 10005, kurl: "https://nostrbook.dev/kinds/10005", "name": "Public Chats", short_description: "Chat channels the user participates in", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Public Chats events (kind 10005) allow users to maintain a list of chat channels they participate in. This standard replaceable event kind serves as a record of a user's chat channel memberships, making it easier to organize and access their conversations. It primarily references NIP-28 chat channels, providing a centralized list of channels the user wants to track.`},
  { kind: 10006, kurl: "https://nostrbook.dev/kinds/10006", "name": "Blocked Relays", short_description: "Relays clients should never connect to", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Blocked Relays events (kind 10006) allow users to maintain a list of relays that their clients should never connect to. This standard replaceable event kind serves as a blacklist of relays the user wants to avoid, whether for privacy concerns, content issues, performance problems, or other reasons. By publishing this list, users can synchronize their relay blocking preferences across devices and client applications.`},
  { kind: 10007, kurl: "https://nostrbook.dev/kinds/10007", "name": "Search Relays", short_description: "Relays optimized for search queries", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Search Relays events (kind 10007) allow users to specify which relays they prefer for performing search operations. This standard replaceable event kind identifies relays with good search capabilities or comprehensive content indexes. By publishing this list, users can optimize their search experience and help clients know which relays to prioritize when executing search queries.`},
  { kind: 10009, kurl: "https://nostrbook.dev/kinds/10009", "name": "Simple Groups", short_description: "Private group memberships", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Simple Groups events (kind 10009) allow users to maintain a list of NIP-29 groups they participate in. This standard replaceable event kind serves as a record of user's group memberships, making it easier to organize and access private group conversations. Unlike public chat channels, these are typically smaller, more private group conversations with specific membership requirements.`},
  { kind: 10013, kurl: "https://nostrbook.dev/kinds/10013", "name": "Private Relay List", short_description: "Encrypted list of relays for private content", nurl: "https://github.com/nostr-protocol/nips/blob/master/37.md", nip: "NIP-37", description: `Private Relay List events (kind 10013) specify a user's preferred relays for storing sensitive private content such as draft events. Unlike other relay lists that expose relay URLs in public tags, this event type keeps the relay information encrypted, providing an additional layer of privacy. The relay URLs are encrypted using NIP-44 encryption with the author's own keys, ensuring that only the author can see which relays are being used for private content.`},
  { kind: 10019, kurl: "https://nostrbook.dev/kinds/10019", "name": "Nutzap Informational", short_description: "Configuration for receiving Nutzaps", nurl: "https://github.com/nostr-protocol/nips/blob/master/61.md", nip: "NIP-61", description: `Nutzap Informational events (Kind 10019) specify the configuration a user requires to receive Nutzaps, which are P2PK Cashu tokens used for Nostr-native payments. This event indicates the mints a user trusts, the relays where they'll read token events from, and the public key that should be used to P2PK-lock receiving Nutzaps.`},
  { kind: 10030, kurl: "https://nostrbook.dev/kinds/10030", "name": "Emojis", short_description: "User preferred emojis and pointers to emoji sets", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Kind 10030 represents "Emojis", which is a standard list for user preferred emojis and pointers to emoji sets. It's part of the "Standard lists" category defined in NIP-51, meaning users can only have a single instance of this kind. This list helps users maintain their preferred custom emojis and references to emoji sets across different clients.`},
  { kind: 10050, kurl: "https://nostrbook.dev/kinds/10050", "name": "DM Relays", short_description: "User's preferred relays for direct messages", nurl: "https://github.com/nostr-protocol/nips/blob/master/17.md", nip: "NIP-17", description: `DM Relays events (kind 10050) specify a user's preferred relays for receiving direct messages. This event type is a crucial component of the improved direct messaging system defined in NIP-17, allowing users to designate specific relays where they want to receive private messages, thereby enhancing privacy and reducing relay load.`},
  { kind: 17375, kurl: "https://nostrbook.dev/kinds/17375", "name": "Cashu Wallet", short_description: "Cashu wallet configuration", nurl: "https://github.com/nostr-protocol/nips/blob/master/60.md", nip: "NIP-60", description: `A Cashu Wallet event (Kind 17375) is a replaceable event that stores encrypted wallet information for a Cashu-based wallet. This event contains the private key used for P2PK ecash transactions and a list of mints that the wallet uses. Cashu wallets allow users to store and manage ecash tokens on Nostr, making them accessible across different applications.`},
  { kind: 30000, kurl: "https://nostrbook.dev/kinds/30000", "name": "Follow Sets", short_description: "Categorized lists of followed profiles", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Follow Sets (kind 30000) are parameterized replaceable events that allow users to create and manage categorized groups of users they follow. Unlike the standard follow list (kind 3), follow sets enable users to organize followed accounts into different categories or contexts, providing more granular control over their social graph.`},
  { kind: 30002, kurl: "https://nostrbook.dev/kinds/30002", "name": "Relay Sets", short_description: "Categorized relay groups for different purposes", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Relay Sets events (kind 30002) allow users to create and manage categorized groups of relays for different purposes. This parameterized replaceable event kind enables users to define multiple relay groups that they can easily select from during various operations. Unlike the standard Read/Write Relays (kind 10002), Relay Sets allow for more granular organization of relays by specific use cases, topics, or functions.`},
  { kind: 30003, kurl: "https://nostrbook.dev/kinds/30003", "name": "Bookmark Sets", short_description: "Categorized bookmark collections", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Bookmark Sets events (kind 30003) allow users to organize saved content into categorized collections. This parameterized replaceable event kind enables users to create multiple themed bookmark folders, similar to browser bookmark folders. Unlike the global Bookmarks list (kind 10003), Bookmark Sets provide a way to group related content into labeled separate collections for better organization and retrieval.`},
  { kind: 30007, kurl: "https://nostrbook.dev/kinds/30007", "name": "Kind Mute Sets", short_description: "Mute users for specific event kinds", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Kind Mute Sets events (kind 30007) allow users to selectively mute specific users for particular event kinds only. This parameterized replaceable event kind enables more granular control than a global mute list, letting users filter out certain types of content from specific authors while still seeing their other content. For example, a user could mute someone's reposts (kind 6) without muting their original notes (kind 1).`},
  { kind: 30008, kurl: "https://nostrbook.dev/kinds/30008", "name": "Profile Badges", short_description: "Badges displayed on a user profile", nurl: "https://github.com/nostr-protocol/nips/blob/master/58.md", nip: "NIP-58", description: `Profile Badges events (kind 30008) allow Nostr users to display badges they've earned or been awarded on their profiles. These events serve as a collection of references to badge definitions and badge awards that a user wants to showcase, creating a visual representation of achievements, credentials, or affiliations in their profile.`},
  { kind: 30009, kurl: "https://nostrbook.dev/kinds/30009", "name": "Badge Definition", short_description: "Defines a badge that can be awarded", nurl: "https://github.com/nostr-protocol/nips/blob/master/58.md", nip: "NIP-58", description: `Badge Definition events (kind 30009) are used to create and define badges in the Nostr ecosystem. These events establish what a badge looks like, what it means, and who issued it. Badge definitions are created by badge issuers and can be awarded to users through Badge Award events (kind 8).`},
  { kind: 30023, kurl: "https://nostrbook.dev/kinds/30023", "name": "Long-form Content", short_description: "Articles and blog posts", nurl: "https://github.com/nostr-protocol/nips/blob/master/23.md", nip: "NIP-23", description: `Long-form Content events (kind 30023) provide a way for users to publish longer articles, blog posts, essays, or any text content that exceeds the practical limits of regular notes. These events are designed to be editable and use Markdown formatting to maintain consistent rendering across different clients.`},
  { kind: 30024, kurl: "https://nostrbook.dev/kinds/30024", "name": "Draft Long-form Content", short_description: "Unpublished drafts of articles", nurl: "https://github.com/nostr-protocol/nips/blob/master/23.md", nip: "NIP-23", description: `Draft Long-form Content events (kind 30024) serve as unpublished or work-in-progress versions of long-form articles. They have the same structure and format as published long-form content (kind 30023) but are intended to be private or not yet ready for public consumption. This kind allows authors to save and synchronize drafts across devices before finalizing and publishing them.`},
  { kind: 30030, kurl: "https://nostrbook.dev/kinds/30030", "name": "Emoji Sets", short_description: "Categorized emoji groups", nurl: "https://github.com/nostr-protocol/nips/blob/master/51.md", nip: "NIP-51", description: `Kind 30030 represents "Emoji sets" which are categorized emoji groups. These are part of the Lists concept defined in NIP-51, specifically under the "Sets" category. Emoji sets allow users to create and maintain collections of custom emojis organized into named groups.`},
  { kind: 31234, kurl: "https://nostrbook.dev/kinds/31234", "name": "Draft Event", short_description: "Private wrapper for any draft event", nurl: "https://github.com/nostr-protocol/nips/blob/master/37.md", nip: "NIP-37", description: `Draft Event (kind 31234) is a private wrapper that allows users to save unpublished drafts of any Nostr event type. These events encrypt the draft content to the author's public key, ensuring that only the author can read them, while still enabling synchronization across devices and backup of work-in-progress content.`},
  { kind: 31989, kurl: "https://nostrbook.dev/kinds/31989", "name": "Handler Recommendation", short_description: "Recommends applications that can handle specific event kinds", nurl: "https://github.com/nostr-protocol/nips/blob/master/89.md", nip: "NIP-89", description: `A Handler Recommendation event is used by users to recommend applications that can handle specific types of events. This kind helps bridge the gap when a client encounters an unknown event kind by allowing users to discover appropriate applications that can handle those events.`},
  { kind: 31990, kurl: "https://nostrbook.dev/kinds/31990", "name": "Handler Information", short_description: "Provides information about how apps can handle specific event kinds", nurl: "https://github.com/nostr-protocol/nips/blob/master/89.md", nip: "NIP-89", description: `A Handler Information event provides details about how an application can handle specific event kinds. This event contains URLs and protocols for redirecting users to specialized applications that can properly display and interact with specific types of content.`},
  { kind: 34550, kurl: "https://nostrbook.dev/kinds/34550", "name": "Community Definition", short_description: "Definition of a moderated community", nurl: "https://github.com/nostr-protocol/nips/blob/master/72.md", nip: "NIP-72", description: `Community Definition events (kind 34550) establish moderated communities in the Nostr ecosystem. These parameterized replaceable events define the structure, purpose, and governance of Reddit-style communities where users can post content that is subject to moderation. Each community has a unique identity, description, and a list of designated moderators who can approve or reject posts.`},
];
